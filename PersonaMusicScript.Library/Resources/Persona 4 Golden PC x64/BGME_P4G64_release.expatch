const RANDOM_SONG_SIZE = 4
const BATTLE_BGM_SIZE = 8
var randomSongs(4) = bytes(00 00 00 00)
var battleBgms(8) = bytes(00 00 00 00 00 00 00 00)
var battleCtxBgmType(1) = bytes(00)
const SHELL_SONG_ID = 58
const SHELL_POSITION_ID = 80
var shellPositionPtr(8) = 0
var shellOriginalData(4) = 0
[patch BGME - Encounter BGM Patch]
pattern = 0F B7 4C D0 16
movzx ecx, word ptr rax+rdx*0x8+0x16
label start
movzx r12, byte [rax + rdx * 0x8 + 4]
mov r13, {battleCtxBgmType}
cmp byte [r13], 0
je setupSong
movzx r12, byte [r13]
mov byte [r13], 0
label setupSong
cmp r12, 0
je bgmeOff
cmp r12, 3
jl randomSong
push rax
push rdx
mov rax, rcx
mov r12w, {BATTLE_BGM_SIZE}
mul r12w
mov r12, {battleBgms}
add r12, rax
movzx rax, word [r8 + 0x1e]
mov r13w, word [r12]
cmp rax, 2
je configReady
shr r13w, 2
cmp rax, 1
je configReady
shr r13w, 2
label configReady
and r13, 3
mov r14, {battleCtxBgmType}
mov byte [r14], r13b
mov r14, 2
mul r14
movzx r12d, word [r12 + rax + 2]
mov ecx, r12d
pop rdx
pop rax
jmp start
label randomSong
cmp r12, 2
jl playSong
push rax
push rdx
mov rax, {RANDOM_SONG_SIZE}
mul ecx
mov r12, {randomSongs}
add r12, rax
mov r13w, [r12 + 2]
mov r12w, [r12]
sub r13w, r12w
mov rax, 0x1451FE644
mov rax, [rax]
xor rdx, rdx
div r13w
add r12w, dx
movzx ecx, r12w
pop rdx
pop rax
label playSong
cmp ecx, {SHELL_POSITION_ID} + 1
jne skipFix
mov edx, {SHELL_SONG_ID} + 1
jmp functionEnd
label skipFix
mov r9, 0x140BEAB30
mov r9, [r9]
mov r9, [r9+0x708]
mov r9, [r9+0x7f8]
mov r9, [r9+0x7c8]
mov r9, [r9+0x90]
add r9, 1758
xor rax, rax
mov eax, ecx
mov ecx, 4
mul ecx
add rax, r9
mov ecx, [rax]
add r9, {SHELL_POSITION_ID} * 4
mov rdx, {shellPositionPtr}
cmp qword [rdx], 0
jne swapSongs
push r9
mov [rdx], r9
mov rdx, {shellOriginalData}
mov r9d, [r9]
mov [rdx], r9d
pop r9
label swapSongs
mov [r9], ecx
mov edx, {SHELL_SONG_ID}
label functionEnd
mov r9, 0x1400bc6fd
jmp r9
label bgmeOff
mov rdx, {shellPositionPtr}
mov rdx, [rdx]
cmp qword rdx, 0
je original
mov r9, {shellOriginalData}
mov r9d, [r9]
mov [rdx], r9d
label original
add ecx, -2
[patch BGME - Event BGM Patch]
pattern = 0F B7 14 0E
movzx edx, word [rsi + rcx]
cmp edx, 64
jng functionEnd
mov r9, 0x140BEAB30
mov r9, [r9]
mov r9, [r9+0x708]
mov r9, [r9+0x7f8]
mov r9, [r9+0x7c8]
mov r9, [r9+0x90]
add r9, 1758
push rax
xor rax, rax
mov eax, edx
mov edx, 4
mul edx
add rax, r9
mov edx, [rax]
pop rax
add r9, {SHELL_POSITION_ID} * 4
mov [r9], edx
mov edx, {SHELL_SONG_ID}
label functionEnd
mov [rax + 0x12], dx
